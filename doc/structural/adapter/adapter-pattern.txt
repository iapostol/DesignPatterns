- Intent
Convert the interface of a class into another interface clients expect. Adapter lets
classes work together that couldn't otherwise because of incompatible interfaces.

Adapter is a structural design pattern that allows objects with incompatible interfaces to collaborate.

- Also Known As
Wrapper

- Applicability
Use the Adapter pattern when
• you want to use an existing class, and its interface does not match the one
you need.

• you want to create a reusable class that cooperates with unrelated or unforeseen
classes, that is, classes that don't necessarily have compatible interfaces.

• (object adapter only) you need to use several existing subclasses, but it's un-
practical to adapt their interface by subclassing every one. An object adapter can adapt the interface of its parent class.


- Class Adapter uses inheritance and can only wrap a class. It cannot wrap an interface since by definition it must derive from some base class.

- Object Adapter uses composition and can wrap classes or interfaces, or both. It can do this since it contains, as a private, encapsulated member, the class or interface object instance it wraps.